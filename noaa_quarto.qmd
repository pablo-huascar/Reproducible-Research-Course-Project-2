---
title: "U.S. National Oceanic and Atmospheric Administration's (NOAA) storm data base: damages to population health, properties, and crops"
author: "Francisco Pablo Huascar Arag√£o Pinheiro"
format: html
editor: visual
---


## Synopsis

This assignment is part of the reproducible research course from Coursera and was supposed to be written in English. As English is not my native language, I apologize in advance for any mistakes.

From the U.S. National Oceanic and Atmospheric Administration's (NOAA) data, we analyzed the impact of catastrophic events on population health, property, and crops. Initially, we recoded the data related to the variable "evtype" (the type of extreme weather event) so that there was greater accuracy concerning the events studied. Then, we made a time series to evaluate the occurrence of injuries and fatalities over the period available in the data. Finally, we assessed the most harmful events to the health of the U.S. population and those that caused the most significant economic damage.

## Packages and configurations

```{r echo=T, message=FALSE, warning=FALSE, paged.print=TRUE}
Sys.setlocale("LC_ALL","English")
library(tidyverse)
library(janitor)
library(lubridate)
require(maps)
require(viridis)
library(patchwork)
library(kableExtra)
```

## Data Processing

### Importing

Initially, we downloaded the data from the link indicated on the Coursera website and then save it in a tibble called noaa_data. We use the clean_names function from the janitor package, so we don't have to deal with capitalized words.

```{r echo=T, message=FALSE, warning=FALSE, paged.print=TRUE}
if(!file.exists("./data")){dir.create("./data")}

url <- 
  "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2"

destfile <- "./data/StormData.csv.bz2"

download.file(url = url,
              destfile = destfile)

noaa_data <- 
  read_csv("./data/StormData.csv.bz2") %>% 
  clean_names()
```

We took an initial look at the data to see which variables would help answer the questions posed in this assignment. We decided to select the variables indicated below. In addition to the obvious variables to deal with the theme, we kept those that could help localize the events along the U.S. and allow us to make a time series. We prepared the variables for analysis, particularly evtype, whose encoding was messy. From the website of the National Severe Storms Laboratory - NOAA (<https://www.nssl.noaa.gov/education/svrwx101/>), we gather information to try to make a better encoding. To do so, we use the text patterns in the existing categories and check others categories with high fatalities or injuries that were not cataloged as severe weather. To one can be able to evaluate the new encoding, we kept the evtype variable and created a new one called evtype_rcd. We also made the cleaned exponent variables and calculated new variables for property and crop damage. Finally, we assessed missing values in the variables of interest.

-   bgn_date - date the event occurred;\
-   state_2 - State where the event occurred;
-   evtype - The type of extreme weather event;
-   injuries - The number of injuries associated with the event;
-   fatalities - The number of fatalities associated with the event;
-   propdmg - Significant digits for the amount of proprety damage;
-   propdmgexp - Magnitude of the property damage (dollars);
-   cropdmg - Significant figures for the amount of crop damage;
-   cropdmgexp - Magnitude of the crop damage (dollars).

```{r echo=T, message=FALSE, warning=FALSE, paged.print=TRUE}
noaa_data %>% 
  glimpse()
```

```{r echo=T, message=FALSE, warning=FALSE, paged.print=TRUE}

noaa_data %>% 
  group_by(evtype) %>% 
  summarise(total = sum(fatalities)) %>% 
  arrange(desc(total))%>%
  kable() %>% 
  kable_styling(latex_options = "striped",
                full_width = F,
                position = "left") %>% 
  scroll_box(width = "50%", height = "200px")
```

```{r echo=T, message=FALSE, warning=FALSE, paged.print=TRUE}
noaa_data %>% 
  group_by(evtype) %>% 
  summarise(total = sum(injuries)) %>% 
  arrange(desc(total)) %>%
  kable() %>% 
  kable_styling(latex_options = "striped",
                full_width = F,
                position = "left") %>% 
  scroll_box(width = "50%", height = "200px")

```

```{r echo=T, message=FALSE, warning=FALSE, paged.print=TRUE}

unique(noaa_data$propdmgexp)

unique(noaa_data$propdmgexp)

noaa_data_health_damage <- 
  noaa_data %>%
  select(bgn_date,
         state_2,
         evtype,
         fatalities,
         injuries,
         propdmg,
         propdmgexp,
         cropdmg,
         cropdmgexp) %>%
  mutate(bgn_date = mdy_hms(bgn_date),
         year = year(bgn_date),
         state_2 = as_factor(state_2),
         evtype = as_factor(evtype),
         evtype_rcd = case_when(str_detect(evtype,"STORM") ~ "Thunderstorm",
                          str_detect(evtype,"TSTM") ~ "Thunderstorm",
                          str_detect(evtype,"TORNADO") ~ "Tornado",
                          str_detect(evtype, "FLOOD") ~ "Flood",
                          str_detect(evtype, "LIGHTNING") ~ "Lightning",
                          str_detect(evtype, "HAIL") ~ "Hail",
                          str_detect(evtype, "WINDS") ~ "Damaging winds",
                          str_detect(evtype, "SNOW") ~ "Winter weather",
                          str_detect(evtype, "COLD") ~ "Winter weather",
                          str_detect(evtype, "ICE") ~ "Winter weather",
                          str_detect(evtype, "BLIZZARD") ~ "Winter weather",
                          str_detect(evtype, "COLD") ~ "Winter weather",
                          str_detect(evtype, "Cold") ~ "Winter weather",
                          str_detect(evtype, "ICY") ~ "Winter weather",
                          str_detect(evtype, "WINTER WEATHER") ~ "Winter weather",
                          str_detect(evtype, "HEAT") ~ "Excessive heat",
                          str_detect(evtype, "AVALANCHE") ~ "Avalanche",
                          str_detect(evtype, "CURRENT") ~ "Rip current",
                          str_detect(evtype, "HURRICANE") ~ "Hurricane",
                          str_detect(evtype, "FIRE") ~ "Wild Fire",
                          str_detect(evtype, "FOG") ~ "Fog",
                          TRUE ~ "Others"),
         evtype_rcd = as_factor(evtype_rcd),
         propdmgexp_num = case_when(propdmgexp %in% c("+", "-","0") ~ 1,
                                propdmgexp %in% "1" ~ 10,
                                propdmgexp %in% c("2", "H","h") ~ 100,
                                propdmgexp %in% c("3", "K") ~ 1000,
                                propdmgexp %in% "4" ~ 10000,
                                propdmgexp %in% "5" ~ 100000,
                                propdmgexp %in% c("6", "M", "m") ~ 1000000,
                                propdmgexp %in% "7" ~ 10000000,
                                propdmgexp %in% "8" ~ 100000000,
                                propdmgexp %in% "?" ~ 0,
                                propdmgexp %in% "B" ~ 1000000000,
                                TRUE ~ 1),
         cropdmgexp_num = case_when(cropdmgexp %in% "0" ~ 1,
                                cropdmgexp %in% "2" ~ 100,
                                cropdmgexp %in% "?" ~ 0,
                                cropdmgexp %in% "B" ~ 1000000000,
                                cropdmgexp %in% "K" ~ 1000,
                                cropdmgexp %in% "k" ~ 1000,
                                cropdmgexp %in% "M" ~ 1000000,
                                cropdmgexp %in% "m" ~ 1000000,
                                TRUE ~ 1),
         propdmg_calc = propdmg*propdmgexp_num,
         cropdmg_calc = cropdmg*cropdmgexp_num,
         region  = case_when(state_2 %in% "AL" ~ "alabama",
                             state_2 %in% "AZ" ~ "arizona",
                             state_2 %in% "AR" ~ "arkansas",
                             state_2 %in% "CA" ~ "california",
                             state_2 %in% "CO" ~ "colorado",
                             state_2 %in% "CT" ~ "connecticut",
                             state_2 %in% "DE" ~ "delaware",
                             state_2 %in% "DC" ~ "district of columbia",
                             state_2 %in% "FL" ~ "florida",
                             state_2 %in% "GA" ~ "georgia",
                             state_2 %in% "ID" ~ "idaho",
                             state_2 %in% "IL" ~ "illinois",
                             state_2 %in% "IN" ~ "indiana",
                             state_2 %in% "IA" ~ "iowa",
                             state_2 %in% "KS" ~ "kansas",
                             state_2 %in% "KY" ~ "kentucky",
                             state_2 %in% "LA" ~ "louisiana",
                             state_2 %in% "ME" ~ "maine",
                             state_2 %in% "MD" ~ "maryland",
                             state_2 %in% "MA" ~ "massachusetts",
                             state_2 %in% "MI" ~"michigan",
                             state_2 %in% "MN" ~ "minnesota",
                             state_2 %in% "MS" ~ "mississippi",
                             state_2 %in% "MO" ~ "missouri",
                             state_2 %in% "MT" ~ "montana",
                             state_2 %in% "NE" ~ "nebraska",
                             state_2 %in% "NV" ~ "nevada",
                             state_2 %in% "NH" ~ "new hampshire",
                             state_2 %in% "NJ" ~ "new jersey",
                             state_2 %in% "NM" ~"new mexico",
                             state_2 %in% "NY" ~ "new york",
                             state_2 %in% "NC" ~ "north carolina",
                             state_2 %in% "ND" ~ "north dakota",
                             state_2 %in% "OH" ~ "ohio",
                             state_2 %in% "OK" ~ "oklahoma",
                             state_2 %in% "OR" ~ "oregon",
                             state_2 %in% "PA" ~ "pennsylvania",
                             state_2 %in% "RI" ~ "rhode island",
                             state_2 %in% "SC" ~  "south carolina",
                             state_2 %in% "SD" ~ "south dakota",
                             state_2 %in% "TN" ~ "tennessee",
                             state_2 %in% "TX" ~ "texas",
                             state_2 %in% "UT" ~ "utah",
                             state_2 %in% "VT" ~ "vermont",
                             state_2 %in% "VA" ~ "virginia",
                             state_2 %in% "WA" ~ "washington",
                             state_2 %in% "WV" ~ "west virginia",
                             state_2 %in% "WI" ~ "wisconsin",
                             state_2 %in% "WY" ~ "wyoming")) %>% 
  relocate(year, .after = bgn_date) %>%
  relocate(evtype_rcd, .after = evtype)
```

```{r echo=T, message=FALSE, warning=FALSE, paged.print=TRUE}

noaa_data_health_damage %>% 
  summarise(across(.cols = everything(),
                   ~ sum(is.na(.x)))) %>% 
  pivot_longer(cols = bgn_date:region,
               names_to = "Variable",
               values_to = "Sum") %>% 
  kable() %>%
  kable_styling(latex_options = "striped",
                full_width = F,
                position = "left") %>% 
  scroll_box(width = "50%", height = "200px")
```

## Results

Initially, we can look at total fatalities and injuries in a time series.

```{r echo = T, message = FALSE, warning = FALSE, out.width = "100%"}
noaa_data_health_damage %>% 
  group_by(year) %>% 
  summarise(across(fatalities:injuries,
                  ~ sum(.x))) %>% 
  pivot_longer(!year, 
               names_to = "damage",
               values_to = "total") %>%
  mutate(year = ymd(year, truncated = 2L)) %>%
  ggplot(aes(year, total, colour = as_factor(damage))) +
  geom_line()+
  scale_x_date()+
  labs(x = "Year",
       y = "Total",
       color = "Type of damage")+
  scale_x_date(breaks = "5 years",
               date_labels = "%Y")+
  theme_classic()
```

Around 1995 there was a peak in fatalities. That year there were a large number of deaths from excessive heat.

```{r echo=T, message=FALSE, warning=FALSE, paged.print=TRUE}
noaa_data_health_damage %>% 
  filter(year >= 1994 & year <= 1996) %>%
  group_by(evtype_rcd, 
           year) %>% 
  summarise(total = sum(fatalities)) %>% 
  arrange(desc(total)) %>%
  pivot_wider(names_from = year,
              values_from = total) %>%
  rename("Type of event" = evtype_rcd) %>%
  relocate("1994",
           .before = "1995") %>% 
  kable(caption = "Total fatalities by type of event from 1994 to 1996") %>% 
  kable_styling(latex_options = "striped",
                full_width = F,
                position = "left") %>%
  scroll_box(width = "50%", height = "200px")
  
  


```

There was a peak in injuries between 1997 and 1999. When analyzing data from this period, we see many injuries due to floods in 1998.

```{r echo=T, message=FALSE, warning=FALSE, paged.print=TRUE}

noaa_data_health_damage %>% 
  filter(year >= 1997 & year <= 1999) %>% 
  group_by(evtype_rcd,
           year) %>% 
  summarise(total = sum(injuries)) %>% 
  arrange(desc(total)) %>% 
  pivot_wider(names_from = year,
              values_from = total) %>% 
  rename("Type of event" = evtype_rcd) %>%
  relocate("1997",
           .before = "1998") %>%
  kable(caption = "Total injuries by type of event from 1997 to 1999") %>% 
  kable_styling(latex_options = "striped",
                full_width = F,
                position = "left") %>% 
  scroll_box(width = "50%", height = "200px")
  
```

### Across the United States, which types of events are most harmful with respect to population health?

As indicated below, tornadoes caused the majority of fatalities and injuries across the United States in the analyzed period.

```{r echo=T, message=FALSE, warning=FALSE, paged.print=TRUE}
noaa_data_health_damage %>% 
  group_by(evtype_rcd) %>% 
  summarise(across(fatalities:
                   injuries,
                   ~ sum(.x))) %>% 
  arrange(desc(fatalities)) %>% 
  rename("Event type" = evtype_rcd,
         "Total fatalities" = fatalities,
         "Total injuries" = injuries) %>% 
  kable(caption = "Total fatalities and injuries by event type") %>% 
  kable_styling(latex_options = "striped") %>% 
  scroll_box(width = "100%", height = "200px")
```

Texas, Kansas, Oklahoma, Florida, and Nebraska are the five states with the most tornadoes.

```{r echo=T, message=FALSE, warning=FALSE}
noaa_data_health_damage %>%
  filter(evtype_rcd == "Tornado") %>% 
  group_by(evtype_rcd, 
           state_2) %>% 
  count() %>%
  arrange(desc(n)) %>%
  pivot_wider(names_from = evtype_rcd,
              values_from = n) %>%
  rename("State" = state_2,
         "n" = Tornado) %>% 
  kable(caption = "Total number of tornadoes by state") %>% 
  kable_styling(latex_options = "striped",
                full_width = F,
                position = "left") %>% 
  scroll_box(width = "33%", height = "200px")
```

Texas has the most injuries from tornadoes, followed by Alabama and Mississippi.

```{r echo=T, message=FALSE, warning=FALSE}
noaa_data_health_damage %>%
  filter(evtype_rcd == "Tornado") %>% 
  group_by(evtype_rcd, 
           state_2) %>%
  summarise(total = sum(injuries)) %>% 
  arrange(desc(total)) %>%
  pivot_wider(names_from = evtype_rcd,
              values_from = total) %>% 
  rename("State" = state_2,
         "n" = Tornado) %>% 
  kable(caption = "Total injuries due to tornadoes by state") %>%
  kable_styling(latex_options = "striped",
                full_width = F,
                position = "left") %>% 
  scroll_box(width = "33%", height = "200px")
```

Alabama has the most fatalities from tornadoes. Texas and Mississippi come next.

```{r message=FALSE, warning=FALSE}
noaa_data_health_damage %>% 
  filter(evtype_rcd == "Tornado") %>% 
  group_by(evtype_rcd,
           state_2) %>% 
  summarise(total = sum(fatalities)) %>% 
  arrange(desc(total)) %>% 
  pivot_wider(names_from = evtype_rcd,
              values_from = total) %>% 
  rename("State" = state_2,
         "n" = Tornado) %>% 
  kable(caption = "Total fatalities due to tornadoes by state") %>%
  kable_styling(latex_options = "striped",
                full_width = F,
                position = "left") %>% 
  scroll_box(width = "33%", height = "200px")
  
```

On the maps below, the states are colored by total fatalities and injuries by tornadoes in the period.

```{r echo=T, message=FALSE, warning=FALSE, out.width= "100%"}
states_map <- map_data("state")

tornado_fatalities <- 
  noaa_data_health_damage %>%
  filter(evtype_rcd == "Tornado") %>% 
  group_by(region) %>% 
  summarise(total = sum(fatalities)) %>% 
  arrange(desc(total))

tornado_fatalities_map <-
  left_join(states_map,
            tornado_fatalities,
            by = "region")

tornado_fatalities_plot <- 
  tornado_fatalities_map %>%
  ggplot(aes(long, 
             lat, 
             group = group,
             fill = NA))+
  geom_polygon(aes(fill = total), 
               color = "white")+
  scale_fill_viridis_c(option = "D")+
  labs(x = NULL,
       y = NULL,
       fill = "Fatalities")+
  theme_classic()+
  theme(axis.text.x = element_blank(),
        axis.text.y = element_blank(),
        axis.ticks.x = element_blank(),
        axis.ticks.y = element_blank(),
        legend.key.size = unit(0.3, "cm"),
        aspect.ratio = 1)

tornado_injuries <- 
  noaa_data_health_damage %>%
  filter(evtype_rcd == "Tornado") %>% 
  group_by(region) %>% 
  summarise(total = sum(injuries)) %>% 
  arrange(desc(total))

tornado_injuries_map <-
  left_join(states_map,
            tornado_injuries,
            by = "region")

tornado_injuries_plot <- 
  tornado_injuries_map %>%
  ggplot(aes(long, 
             lat, 
             group = group,
             fill = NA))+
  geom_polygon(aes(fill = total), 
               color = "white")+
  scale_fill_viridis_c(option = "D")+
  labs(x = NULL,
       y = NULL,
       fill = "Injuries")+
  theme_classic()+
  theme(axis.text.x = element_blank(),
        axis.text.y = element_blank(),
        axis.ticks.x = element_blank(),
        axis.ticks.y = element_blank(),
        legend.key.size = unit(0.3, "cm"),
        aspect.ratio = 1)

join_maps <- tornado_fatalities_plot|tornado_injuries_plot 

join_maps + plot_annotation(title = "Total fatalities and injuries by tornadoes in the US (1950-2011)") 

```

On the other hand, we can analyze which type of event causes, on average, the highest number of fatalities and injuries. Let us take a look at injuries first. As one can see below, hurricanes and excessive heat are the events that, on average, cause the most injuries.

```{r echo=TRUE, message=FALSE, warning=FALSE}

noaa_data_health_damage %>% 
  group_by(evtype_rcd) %>% 
  summarise(m = mean(injuries) %>% 
              round(2)) %>%
  arrange(desc(m)) %>% 
  rename("Event type" = evtype_rcd) %>% 
  kable(caption = "Average injuries by type of event") %>%
  kable_styling(latex_options = "striped",
                full_width = F,
                position = "left") %>% 
  scroll_box(width = "33%", height = "200px")

```

Excessive heat is the type of event that causes the highest number of fatalities on average

```{r echo=TRUE, message=FALSE, warning=FALSE}

noaa_data_health_damage %>% 
  group_by(evtype_rcd) %>% 
  summarise(m = mean(fatalities) %>% 
              round(2)) %>% 
  arrange(desc(m)) %>% 
  rename("Event type" = evtype_rcd) %>% 
 kable(caption = "Average fatalities by type of event") %>%
  kable_styling(latex_options = "striped",
                full_width = F,
                position = "left") %>% 
  scroll_box(width = "33%", height = "200px")


```

### Across the United States, which types of events have the greatest economic consequences?

As shown in the following table, on average, hurricanes are the events that cause the most damage to properties and crops.

```{r echo=TRUE, message=FALSE, warning=FALSE}
noaa_data_health_damage %>% 
  group_by(evtype_rcd) %>% 
  summarise(across(propdmg_calc:cropdmg_calc,
                   ~ mean(.x) %>% 
                     round(2))) %>% 
  arrange(desc(propdmg_calc)) %>% 
  rename("Event type" = evtype_rcd,
         "Property damage" = propdmg_calc,
         "Crop damage" = cropdmg_calc) %>% 
  kable(caption = "Property and crop damages by event type") %>% 
  kable_styling(latex_options = "striped") %>% 
  scroll_box(width = "100%", height = "200px")
```

On average, the state of Louisiana has the highest property damage losses.

```{r echo=TRUE, message=FALSE, warning=FALSE, paged.print=TRUE}
noaa_data_health_damage %>%
  group_by(evtype_rcd,
           state_2) %>% 
  summarise(total = mean(propdmg_calc) %>% 
              round(2)) %>% 
  arrange(-total) %>% 
  pivot_wider(names_from = state_2,
              values_from = total) %>%
  rename("Event type" = evtype_rcd) %>%
  kable(caption = "Property damage by event type and state") %>% 
  kable_styling(latex_options = "striped") %>% 
  scroll_box(width = "100%", height = "200px")
```

Regarding crop damages, the state of Mississippi has the highest losses.

```{r echo=TRUE, message=FALSE, warning=FALSE}
noaa_data_health_damage %>% 
  group_by(evtype_rcd,
           state_2) %>% 
  summarise(total = mean(cropdmg_calc) %>% 
              round(2)) %>% 
  arrange(-total) %>% 
  pivot_wider(names_from = state_2,
              values_from = total) %>% 
  rename("Event type" = evtype_rcd) %>%
  kable(caption = "Crop damage by event type and state") %>% 
  kable_styling(latex_options = "striped") %>% 
  scroll_box(width = "100%", height = "200px")

```

We can also evaluate the type of event that caused the most significant damage in the period available in the data. Adding up all the losses, floods are the most economically catastrophic event, followed by hurricanes.

```{r echo=TRUE, message=FALSE, warning=FALSE}
noaa_data_health_damage %>% 
  group_by(evtype_rcd) %>%
  summarise(across(propdmg_calc:cropdmg_calc,
                   ~ sum(.x))) %>% 
  arrange(desc(propdmg_calc)) %>% 
  rename("Event type" = evtype_rcd,
         "Property damage" = propdmg_calc,
         "Crop damage" = cropdmg_calc) %>%
  kable(caption = "Total property and crop damage by event type and state") %>% 
  kable_styling(latex_options = "striped") %>% 
  scroll_box(width = "100%", height = "200px")
```

```{r echo=T, message=FALSE, warning=FALSE, out.width= "100%"}
noaa_data_health_damage %>% 
  group_by(evtype_rcd) %>% 
  summarise(across(propdmg_calc:cropdmg_calc,
                   ~ sum(.x))) %>%
  arrange(desc(propdmg_calc)) %>% 
  pivot_longer(!evtype_rcd,
               names_to = "damage",
               values_to = "total") %>% 
  filter(total >= median(total)) %>% 
  ggplot(aes(fct_reorder(evtype_rcd,
                         total),
             total,
             fill = damage))+
  geom_bar(stat = "identity",
           position ="dodge")+
  theme_classic()+
  labs(x = "Event type",
       y = "Total damage",
       fill = "Damage type",
      title = "Total property and Crop damage (1950 -2011)")+
  scale_y_continuous(breaks = c(0, 
                                5.00E+10,
                                1.00E+11,
                                1.50E+11),
                     labels = c("0",
                                "50 billion",
                                "100 billion",
                                "150 billion"))+
  scale_fill_discrete(labels = c("Crop damage",
                                 "Proprety damage"))+
  coord_flip()
  



```
